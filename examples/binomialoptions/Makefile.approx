#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC        = clang++
OPTIMIZE  = yes
DEBUG     = no
DEVICE      = gpu
APPROX_TYPE?=APPROX_IN
ADJACENCY_REARRANGE?=0

#===============================================================================
# Program name & source code list
#===============================================================================

program = binomial_options

source = binomialoptions.cpp binomialOptions_gold.cpp

obj = $(source:.cpp=.o)

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS := -std=c++14 -Wall

# Linker Flags
LDFLAGS =-fapprox -foffload-lto -L$(LIBAPPROX_LOCATION) -lapprox 

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g
  LDFLAGS  += -g
endif


# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif

ifeq ($(DEVICE),gpu)
  CFLAGS +=-fopenmp -fopenmp-targets=$(HPAC_GPU_ARCH) -Xopenmp-target -march=$(HPAC_GPU_SM) -DAPPROX -fapprox -foffload-lto -g -D$(APPROX_TYPE) -DADJACENCY_REARRANGE=$(ADJACENCY_REARRANGE)
else
  CFLAGS +=-qopenmp
endif

#===============================================================================
# Targets to Build
#===============================================================================

$(program): $(obj) 
	$(CC) $(CFLAGS) $(obj) -o $@ $(LDFLAGS)

%.o: %.cpp 
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -rf $(program) $(obj)

run: $(program)
	./$(program) 


